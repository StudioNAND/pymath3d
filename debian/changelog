math3d (3.0.2) unstable; urgency=high

	* Preparing renaming of Quaternion to  UnitQuaternion.

 -- Morten Lind <morten@lind.dyndns.dk>  Wed, 14 May 2015 19:19:00 +0200

math3d (3.0.1) unstable; urgency=high

	* Severe bug fixed in Quaternion constructor on Orientation.
	* Matrix methods on Orientation and Quaternion classes, requested by Thorstein Myhre.
	* Weeded out some deprecated code.

 -- Morten Lind <morten@lind.dyndns.dk>  Wed, 15 Jan 2015 11:00:00 +0200

math3d (3.0.0) unstable; urgency=low

  * Explicited GPL version 3.
  * Better reference system.
  * Much PEP8 update.
  * Fully converted to np.float64 as basic type.
  * More properties. Still missing some due to backward compatibility.
  * Removed some Python-deprecated operators, __coerce__ and __cmp__.
  * Return of NotImplemented in arithmetic operators allow for third party operators to be defined; e.g. __radd__. Previously an exception was raised.
  * More deprecation warnings.
  * Full support for all Euler and Tait-Bryan angle representations in Orientation.
  * New factory for generating uniformly distributed S3 elements (unit vectors) in the vector module.
  * Future: Move factory methods on classes to functions in the pertinent class modules.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 23 Jun 2013 00:14:00 +0200

math3d (2.0.0) unstable; urgency=low

  * Major upgrade.
  * Rudimentary reference system feature.
  * Much PEP8 update.
  * Prepared for Python3.
  * Header string replaces by __ variables.
  * Local imports by leading "." or "..".
  * Partly converted to np.float64 as basic type.
  * Use of properties, partially replacing __getattr__ and __setattr__.
  * Revised constructors for some classes.
  * New build system with debhelper, for both Python2 and Python3 packages.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 26 Dec 2012 00:45:00 +0100

math3d (1.3.1) unstable; urgency=low

  * Bugfix: Use of _eps imported from utils.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.3) unstable; urgency=low

  * Major overhaul on norms and distance measures.
  * Some clarification and breaking of ambiguities in constructors.
  * Rotation vector conversions for Orientation and Quaternion.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.2) unstable; urgency=low

  * Headers with GPL.
  * Minor changes.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1-7) unstable; urgency=low

  * Corrected print, raise, exception, types changes for compatibility with Python 3.x.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1-6) unstable; urgency=low

  * Bugfix in build script that made the gzipped tar archive lack the interpolation module.
  * Transform now use more efficient array as replacement for Orientation and Vector components.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1-5) unstable; urgency=low

  * Fixed some coercion rules for complying with Python 2.6.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1-4) unstable; urgency=low

  * Revised constructor system. Now supports class method for querying whether some data can be used for constructing the object.
  * Some minor constructor related bug fixes and tidying.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1-3) unstable; urgency=low

  * Corrected spelling ("arg" -> "args") in constructor for Transform.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1-2) unstable; urgency=low

  * Corrected a numerical instability in the quaternion power function. Now a check is done for the quaternion being close to the identity. If so, it is forced to identity.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1-1) unstable; urgency=low

  * Conjugation and multiplication of quaternions in the SO(3) led to numerical errors which turned the quaternions out of normalisation. This again led to errors in the exponentiation by the time parameter on the trajectory, resulting in math domain errors. This was fixed by normalisation.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.1) unstable; urgency=low

  * The Quaternion class now have negation and distance methods. This is used in SE3Interpolation and SO3Interpolation to optionally selecting the shortest (the default) rotation path, if the optional constructor parameter 'shortest' evaluates to true. If false, it is indetermined which of the longer or shorter paths will be followed.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.0-4) unstable; urgency=low

  * Important bugfix: Correction of numerical constant in toOrientation method.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.0-3) unstable; urgency=high

  * Important bugfix: Update to more robust quaternion from orientation method proved to be slightly less robust than announced. Now a modification based on the code from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm has been used.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.0-2) unstable; urgency=low

  * Robust method used for computing quaternions from orientation matrices. The method is described in the article: http://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.0-1) unstable; urgency=low

  * Simple bug in dependency of the math3d package. There is now code that requires python 2.5 or higher.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (1.0) unstable; urgency=low

  * Quaternion has been added as a new basic 3D object.
  * Interpolation modules added in "interpolation" package. These comprise usage of quaternions in SLERP to obtain orientational interpolation in SO3Interpolator. R3Interpolator is the simple direct interpolation between two points in space. SE3Interpolator is the combination of the orientation and position interpolators.
  * All main objects (Vector, Transform, Orientation) are now based on "object". No functionality utilizes this as of yet.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-11) unstable; urgency=low

  * Distinguish in-place rotations of Orientations between base or transformed reference.
  * Added exception thrown when not finding attributes for Vector and Orientation.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-10) unstable; urgency=low

  * More efficient rot{X,Y,Z} on orientations.
  * New methods for in-place rotation of orientations: rotate, rotate{X,Y,Z}.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-9) unstable; urgency=low

  * New factory methods newOrientationRotX and newOrientationRotY

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-8) unstable; urgency=low

  * Added a member (_isPosition) and method (isPos) in Vector to distinguish between vector and position vector. the _isPosition is set in Vector.__init__, as per the keyword argument "position". Transform now takes into account if the transformee is a vector or a position vector.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-7) unstable; urgency=low

  * Added __deepcopy__ methods for the Vector, Orientation and Transform. These are the same as __copy__ but needed when somewhere else a deepcopy is cascaded down.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-6) unstable; urgency=low

  * Added __str__ method to all classes, so they can be "print"'ed.
  * Moved to numpy entirely, removing all use of Numeric. This had some type impact, but most severely you cannot right multiply a numpy scalar on any of the objects, since it takes the multiplication. This may be fixed by using new style classes in the future.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-5) unstable; urgency=low

  * Added copy methods to Vector, Orientation, and Transform classes. Each class have now a copy(self,other) for getting the data from other object, and a __copy__(self) method for use by the copy function in the copy module. There are NO type checking yet!

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-4) unstable; urgency=low

  * Corrected serious sign error in Vector.angle in vector.py.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100

math3d (0.1-3) unstable; urgency=low

  * Added a signed angle method in vector.py.

 -- Morten Lind <morten@lind.dyndns.dk>  Thu, 20 Dec 2012 21:46:43 +0100
